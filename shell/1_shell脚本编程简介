shell编程之：shell简介和脚本变量
shell：是一个交互式进程，用户通过shell与内核进行交互工作

一，shell分类：
广义上的shell分为两类：
     GUI：Graphic UI 即是图形界面的用户接口，常见的GUI有
	Gnome
	KDE
	Xfce

     CLI：Command Lie Interface 即是命令行接口，常见的CLI有
	bsh（作者：Boarn, 又称为bsh）
	csh
	tcsh
	ksh
	bash（Boarn again shell）==>Bsh的再次发行版
	zsh

二、程序执行两种方式
两种方式：
     编译执行：预处理-->编译-->汇编-->链接；事先完成，结果：二进制程序文件
	C, C++
     解释执行：由解释器全程参与运行过程，每次读取一行，运行一行；
	Python：编程库
    程序控制结构，调用编程库完成程序编写；
    库文件：功能模块，在编程中可调用；通过其API；
	Bash：编程
    程序控制结构，调用机器上命令程序文件进行程序编写；
	外部命令：各应用程序提供；
	程序：指令+数据
		算法+数据结构

三、程序指令
	过程式编程：以指令为中心，设计算法，数据服务于算法；
	对象式编程：以数据为中心，设计数据结构(类)，程序服务于数据结构；
	bash过程式编程：
		顺序执行：逐个执行
		选择执行：只执行其中一个分支
		循环执行：一段代码要执行0,1或多遍
		编程元素：变量、流程、函数

四、什么是脚本
	脚本：文本文件
		运行脚本：事实上是运行一个bash进程，此进程负责从脚本文件中读取一个执行逻辑，而后由bash进程负责解析并运行此逻辑；
		启动脚本：
			(1) # bash /PATH/TO/SCRIPT_FILE
			(2) 一个执行权限, 
				# ./PATH/TO/SCRIPT_FILE 
				shebang：
					#!/bin/bash
	脚本格式
		第一行：顶格给出#!/bin/bash
		注释行：#
		bash的常用选项：
			-n: 检查脚本中的语法错误；   	bash -n
			-x：调试执行脚本；		bash -x

	命令状态结果：
		bash进程用于追踪执行的命令成功与否的状态：
			0: 成功
			1-255：失败
		特殊变量：
			$?：上一条命令的执行状态结果；
		布尔型：
			“真”：成功
			“假”：失败

		自定义脚本的状态结果：
			exit [n]
			注意：脚本中任何位置执行了exit命令即会终止当前shell进程；