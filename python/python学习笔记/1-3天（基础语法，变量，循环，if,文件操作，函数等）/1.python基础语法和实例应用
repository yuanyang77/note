#!/usr/bin/env python
#-*- coding: utf-8 -*-
#author yancy
第一个程序，国际惯例，hello world.
print("hello world")
print("你好，世界!")

一、python的基础语法
	1.python用空格缩进来区分代码块，默认缩进4个空格.

	2.python中使用“\”来做为换行符号。
	
	3.python使用#号做为单行注释，使用'''  ''' 来注释多行。
	
	4.python输出，例如：
		#!/usr/bin/python
		# -*- coding: UTF-8 -*-
		x="a"
		y="b"
		# 换行输出
		print x
		print y

		print '---------'
		# 不换行输出
		print x,
		print y,

		# 不换行输出
		print x,y

二、python的变量和常量和一些概念
		变量存储在内存中的值。这就意味着在创建变量时会在内存中开辟一个空间。
	基于变量的数据类型，解释器会分配指定内存，并决定什么数据可以被存储在内存中。
	因此，变量可以指定不同的数据类型，这些变量可以存储整数，小数或字符。
	1.变量的赋值

		name = "yancy"
		age = 25

	Python 中的变量赋值不需要类型声明，系统会根据实际赋值给变量的类型来自动推导。
	每个变量在内存中创建，都包括变量的标识，名称和数据这些信息。
	每个变量在使用前都必须赋值，变量赋值以后该变量才会被创建。
	等号（=）用来给变量赋值。
	等号（=）运算符左边是一个变量名,等号（=）运算符右边是存储在变量中的值。例如：
		counter = 100 # 赋值整型变量
		miles = 1000.0 # 浮点型
		name = "yancy" # 字符串
		 
		print counter
		print miles
		print name

	2.多个变量的赋值
	  a = b = c = 10
	  a,b,c, = 1,2,"yancy"

	3.常量
	  常量就是不会变化的量，python中不存在常量的概念。但是定义一些特殊意义的变量的时候，如：
	  PI = 3.14 
	  这样的变量最好还是用大写定义，并不要改动，当然，如果你一定要去改，python中也没有相应的机制去阻止你。

    4.什么是强类型语言和弱类型语言
       强类型语言：不同类型的数据不能做相互计算，如：
         4+4b  这样的表达式是不无法被执行的，会报错。
         7*7   这样的表达式才是正确的，即相互运算的数据类型必须相同。

       弱类型语言：不同类型的数据可以相互计算，如：
       js  这些语言就是典型的弱类型语言，

     5.什么是动态语言和静态语言
       静态语言：变量类型赋值后，不能在运行的过程中更改。
       动态语言：变量类型复制后，可以在运行过程中更改。

     6.什么是编译型语言和解释型语言
       编译型语言指那些需要把源代码编译成二进制可执行程序的语言，如C C++ go等。
       解释型语言指那些直接使用解释器解释执行代码的语言，如python ,shell等。






